 **Here's the refactored code with the extracted method:**

```java
package org.apache.solr.util;

import com.j256.simplemagic.ContentInfo;
import com.j256.simplemagic.ContentInfoUtil;
import com.j256.simplemagic.ContentType;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.FileVisitResult;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.SimpleFileVisitor;
import java.nio.file.attribute.BasicFileAttributes;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Locale;
import java.util.Set;
import org.apache.solr.common.SolrException;

/** Utility class to guess the mime type of file based on its magic number. */
public class FileTypeMagicUtil implements ContentInfoUtil.ErrorCallBack {
  private final ContentInfoUtil util;
  private static final Set<String> SKIP_FOLDERS = new HashSet<>(Arrays.asList(".", ".."));

  public static FileTypeMagicUtil INSTANCE = new FileTypeMagicUtil();

  FileTypeMagicUtil() {
    try {
      util = new ContentInfoUtil("/magic/executables", this);
    } catch (IOException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, "Error parsing magic file", e);
    }
  }

  // ... other methods remain the same ...

  /**
   * Extracted method to handle the conditional mime-type retrieval.
   *
   * @param contentInfo The ContentInfo object to process
   * @return The appropriate mime-type
   */
  private String getMimeType(ContentInfo contentInfo) {
    if (contentInfo == null) {
      return ContentType.OTHER.getMimeType();
    } else {
      return contentInfo.getContentType().getMimeType();
    }
  }

  /**
   * Guess the mime type of file based on its magic number.
   *
   * @param file file to check
   * @return string with content-type or "application/octet-stream" if unknown
   */
  public String guessMimeType(Path file) {
    try {
      ContentInfo contentInfo = util.findMatch(file.toFile());
      return getMimeType(contentInfo); // Utilize the extracted method
    } catch (IOException e) {
      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);
    }
  }

  // ... other methods remain the same ...
}
```

**Key improvements:**

- **Readability:** The code is more readable as the conditional logic is encapsulated within a dedicated method, making the original methods more concise.
- **Reusability:** The extracted method `getMimeType` can be reused in other parts of the code if needed, reducing redundancy.
- **Maintainability:** Changes to the conditional logic can be made in a single place, reducing the risk of errors and inconsistencies.