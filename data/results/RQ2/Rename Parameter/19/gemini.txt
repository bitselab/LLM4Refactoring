Certainly, you can improve the readability of the code by renaming the parameter `authParams` in the `AuthenticationConsumer` interface. Here's the refactored code:

```java
private interface AuthenticationConsumer {

  void accept(String authPluginClassName, String authData) throws UnsupportedAuthenticationException;

}
```

**Explanation of the change:**

- The parameter name is changed from `authParams` to `authData`.
- This new name better reflects the purpose of the parameter, which is to hold the authentication data required by the plugin. 

**Benefits of this refactoring:**

- **Enhanced Readability:** The code becomes easier to understand for developers working on the codebase.
- **Improved Maintainability:** Clearer parameter names make the code less error-prone and easier to modify in the future.

This refactoring uses a more descriptive term (`authData`) to convey the nature of the information being passed. This improves code clarity and maintainability. 