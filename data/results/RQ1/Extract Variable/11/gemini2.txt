## Refactoring with Extract Variable

There is an opportunity for Extract Variable refactoring in the `associate` method. The repeated expression `getHttpExchange().getRequest()` can be extracted into a variable to improve readability and potentially reusability.

Here's the refactored code:

```java
public boolean associate(HttpExchange exchange) {
  boolean result = false;
  boolean abort = true;
  try (AutoLock ignored = _lock.lock()) {
    if (_exchange == null) {
      abort = false;
      HttpRequest request = exchange.getRequest(); // Extract variable
      result = request.associate(this);
      if (result) {
        _exchange = exchange;
      }
    }
  }

  if (abort) {
    exchange.getRequest().abort(new UnsupportedOperationException("Pipelined requests not supported"));
  } else {
    request.setConnection(getConnection()); // Use the extracted variable
    if (LOG.isDebugEnabled()) {
      LOG.debug("{} associated {} to {}", exchange, result, this);
    }
  }

  return result;
}
```

In this refactoring, we:

1. Extracted `getHttpExchange().getRequest()` into a new variable named `request`.
2. Updated the subsequent lines to use the `request` variable instead of the repeated expression.

This improves code readability and maintainability. 